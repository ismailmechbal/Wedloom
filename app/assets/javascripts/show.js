// Generated by CoffeeScript 1.4.0
(function() {

  $(document).ready(function() {
    var baseEst1, color, height, layer, layers, m, margin, n, rect, stack, stockdata, svg, width, x, y, yStackMax;
    $('#slider').slider({
      range: 'min',
      min: 0,
      max: 500,
      value: 50,
      slide: function(event, ui) {
        var slid;
        $('#amount').html(ui.value);
        slid = parseInt($('#amount').html());
        return $('#estprice1').text(baseEst1 * slid / 500);
      }
    });
    baseEst1 = parseInt($('#estprice1').text().replace(/,/g, ''));
    $('#estprice1').text(baseEst1 * 50 / 500);
    $('#amount').html($('#slider').slider('value'));
    stockdata = [
      [
        {
          'x': 0,
          'y': 1
        }
      ], [
        {
          'x': 0,
          'y': 0.75
        }
      ], [
        {
          'x': 0,
          'y': 0.5
        }
      ], [
        {
          'x': 0,
          'y': 0.25
        }
      ]
    ];
    n = 4;
    m = 1;
    stack = d3.layout.stack();
    layers = stack(d3.range(n).map(function(d) {
      return stockdata[d];
    }));
    yStackMax = d3.max(layers, function(layer) {
      return d3.max(layer, function(d) {
        return d.y0 + d.y;
      });
    });
    margin = {
      top: 40,
      right: 10,
      bottom: 20,
      left: 10
    };
    width = 960 - margin.left - margin.right;
    height = 50 - margin.top - margin.bottom;
    x = d3.scale.ordinal().domain(d3.range(m)).rangeRoundBands([0, height], .08);
    y = d3.scale.linear().domain([0, yStackMax]).range([width, 0]);
    color = d3.scale.category10().domain([0, n - 1]);
    svg = d3.select('svg').attr("width", width + margin.left + margin.right).attr("height", height + margin.top + margin.bottom).append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');
    layer = svg.selectAll('.layer').data(layers).enter().append('g').attr('class', 'layer').style('fill', function(d, i) {
      return color(i);
    });
    rect = layer.selectAll('rect').data(function(d) {
      return d;
    }).enter().append('rect').attr('x', function(d) {
      return x(d.x);
    }).attr('y', height).attr('height', x.rangeBand()).attr('width', 0);
    return rect.transition().delay(function(d, i) {
      return i * 10;
    }).attr('x', function(d) {
      return y(d.y0 + d.y);
    }).attr('width', function(d) {
      return y(d.y0) - y(d.y0 + d.y);
    });
  });

}).call(this);
